######################
### LCG JOB MATRIX ###
######################

.lcg_base_job:
  extends: .ccache_base
  image: registry.cern.ch/ghcr.io/acts-project/${OS}-base:80
  stage: build
  tags:
    - cvmfs

  variables:
    ACTS_LOG_FAILURE_THRESHOLD: WARNING
    INSTALL_DIR: ${{ github.workspace }}/install

    SETUP:

  before_script:
    - 'echo "LCG_VERSION: ${LCG_VERSION}"'
    - 'echo "COMPILER: ${COMPILER}"'

    # Figure out LCG platform name based on version number and OS
    - >
      if [ "$OS" = "alma9"  ]; then
        export LCG_PLATFORM="el9"
      else
        export LCG_PLATFORM="$OS"
      fi

    - 'echo "LCG_PLATFORM: ${LCG_PLATFORM}"'
    - source /cvmfs/sft.cern.ch/lcg/views/LCG_${LCG_VERSION}/x86_64-${LCG_PLATFORM}-${COMPILER}-opt/setup.sh

    - git clone $CLONE_URL src

    - cd src
    - git checkout $HEAD_SHA
    - git submodule init
    - git submodule update
    - cd ..

    - ccache --version

  script:
    - >
      cmake -B build -S src
      --preset=gitlab-ci-lcg
      -DCMAKE_INSTALL_PREFIX="${INSTALL_DIR}"

    - ccache -z
    - cmake --build build -- -j6
    - ccache -s

    - ctest --test-dir build -j$(nproc)



lcg_106a:
  extends: .lcg_base_job

  variables:
    LCG_VERSION: "106a"

  parallel:
    matrix:
      - OS: [alma9]
        COMPILER:
          - gcc13
          - gcc14
          - clang16

lcg_107:
  extends: .lcg_base_job

  variables:
    LCG_VERSION: "107"

  parallel:
    matrix:
      - OS: [alma9]
        COMPILER:
          - gcc13
          - gcc14
          - clang19

lcg_107a:
  extends: .lcg_base_job

  variables:
    LCG_VERSION: "107a"

  parallel:
    matrix:
      - OS: [alma9]
        COMPILER:
          - gcc13
          - gcc14

lcg_108:
  extends: .lcg_base_job

  variables:
    LCG_VERSION: "108"

  parallel:
    matrix:
      - OS: [alma9]
        COMPILER:
          - gcc14
          - gcc15
          - clang19
