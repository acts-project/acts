clang_tidy:
  extends: .spack_base

  stage: build
  image: registry.cern.ch/ghcr.io/acts-project/ubuntu2404:80
  tags:
    - large
  artifacts:
    paths:
      - src/clang-tidy/
    when: always
    expire_in: 1 week

  script:
    - git clone $CLONE_URL src
    - cd src
    - git checkout $HEAD_SHA
    - >
        apt-get update
        && apt-get install -y clang-tidy-18
        && ln -sf /usr/bin/clang++-18 /usr/bin/clang++
        && ln -sf /usr/bin/clang-18 /usr/bin/clang
        && ln -sf /usr/bin/clang-tidy-18 /usr/bin/clang-tidy

    - |
      CI/dependencies/setup.sh -c clang++ -e .env
      source .env

    - >
        cmake -B build -S .
        --preset=gitlab-ci-clangtidy
        -DCMAKE_CXX_COMPILER=clang++
        -DCMAKE_C_COMPILER=clang

    # Main clang-tidy run during cmake compilation
    - CI/clang_tidy/run_clang_tidy.sh clang-tidy build

    # Install dependencies for processing scripts
    - python3 -m pip install -r CI/clang_tidy/requirements.txt

    # Parse the main clang-tidy run
    - >
        CI/clang_tidy/parse_clang_tidy.py
        clang-tidy/clang-tidy.log
        clang-tidy/clang-tidy.json
        --exclude "*thirdparty*"
        --exclude "*ActsPodioEdm*"
        --exclude "*build/_deps/*"

    # Check the combined report against the defined limits
    - CI/clang_tidy/check_clang_tidy.py --report clang-tidy/clang-tidy.json --config CI/clang_tidy/limits.yml

    # Generate an html report
    - codereport clang-tidy/clang-tidy.json clang-tidy/html
