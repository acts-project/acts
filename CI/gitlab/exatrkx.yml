build_exatrkx_cpu:
  extends: .ccache_and_spack_base
  stage: build
  image: registry.cern.ch/ghcr.io/acts-project/ubuntu2404_exatrkx:80
  tags:
    - large

  script:
    - export PATH=/usr/local/sbin:/usr/sbin:/sbin:$PATH
    - export PATH=/usr/local/nvidia/bin:/usr/local/cuda/bin:$PATH
    - echo $PATH
    - git clone $CLONE_URL src
    - cd src
    - git checkout $HEAD_SHA
    - |
      CI/dependencies/setup.sh -c g++ -e .env
      source .env

    - cd ..
    - mkdir build
    # Here we only do a minimal build without examples to save resources
    - >
      cmake -B build -S src
      --preset=gitlab-ci-exatrkx
      -DACTS_EXATRKX_ENABLE_CUDA=OFF
      -DACTS_EXATRKX_ENABLE_MODULEMAP=OFF

    - ccache -z
    - cmake --build build -- -j6
    - ccache -s


build_exatrkx:
  extends: .ccache_and_spack_base
  stage: build
  image: registry.cern.ch/ghcr.io/acts-project/ubuntu2404_exatrkx:80
  tags:
    - large

  artifacts:
    paths:
      - boost-install/
      - build/
    exclude:
      - build/**/*.o
      - build/bin/ActsIntegrationTest*
    expire_in: 6 hours

  script:
    - export PATH=/usr/local/sbin:/usr/sbin:/sbin:$PATH
    - export PATH=/usr/local/nvidia/bin:/usr/local/cuda/bin:$PATH
    - echo $PATH
    - git clone $CLONE_URL src
    - cd src
    - git checkout $HEAD_SHA
    - |
      CI/dependencies/setup.sh -c g++ -e .env
      source .env
    - cd ..
    - mkdir build
    - >
      cmake -B build -S src
      --preset=gitlab-ci-exatrkx

    - ccache -z
    - cmake --build build -- -j6
    - ccache -s

test_exatrkx_unittests:
  extends: .spack_base
  stage: test
  needs:
    - build_exatrkx
  image: registry.cern.ch/ghcr.io/acts-project/ubuntu2404_exatrkx:80
  tags:
    - docker-gpu-nvidia

  script:

    - apt-get update -y
    - git clone $CLONE_URL src
    - cd src
    - git checkout $HEAD_SHA
    - |
      CI/dependencies/setup.sh -c g++ -e .env
      source .env
    - cd ..
    - ctest --test-dir build -R "(ExaTrkX|ConnectedComponentsCuda|JunctionRemoval|Tensor)"

test_exatrkx_python:
  extends: .spack_base
  stage: test
  needs:
    - build_exatrkx
  image: registry.cern.ch/ghcr.io/acts-project/ubuntu2404_exatrkx:80
  tags:
    - docker-gpu-nvidia

  script:
    - apt-get update -y
    - git clone $CLONE_URL src
    - cd src
    - git checkout $HEAD_SHA
    - nvidia-smi
    - |
      CI/dependencies/setup.sh -c g++ -e .env
      source .env
    - source ../build/this_acts_withdeps.sh
    - python3 -m pip install -r Examples/Python/tests/requirements.txt
    - echo $PYTHONPATH
    - which python3
    - python3 --version
    - python3 -c "import acts"
    - python3 -c "from acts.examples import ModuleMapCuda" # There is not yet a proper test for the ModuleMap, but we can at least ensure that it is present and can be imported
    - pytest -rfExw -k torch -v --collect-only
    - pytest -rFExw -k gpu -v # For now only test torch GPU pipeline

build_gnn_tensorrt:
  extends: .ccache_and_spack_base
  stage: build
  image: ghcr.io/acts-project/ubuntu2404_tensorrt:80


  tags:
    - docker-gpu-nvidia

  script:
    - git clone $CLONE_URL src
    - cd src
    - git checkout $HEAD_SHA
    - |
      CI/dependencies/setup.sh -c g++ -e .env
      source .env
    - cd ..
    - mkdir build
    - >
      cmake -B build -S src --preset gitlab-ci-tensorrt
    - ccache -z
    - cmake --build build -- -j6
    - ccache -s
