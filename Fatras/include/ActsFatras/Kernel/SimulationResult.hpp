// This file is part of the ACTS project.
//
// Copyright (C) 2016 CERN for the benefit of the ACTS project
//
// This Source Code Form is subject to the terms of the Mozilla Public
// License, v. 2.0. If a copy of the MPL was not distributed with this
// file, You can obtain one at https://mozilla.org/MPL/2.0/.

#pragma once

#include "ActsFatras/EventData/Hit.hpp"
#include "ActsFatras/EventData/Particle.hpp"

#include <limits>
#include <vector>

namespace ActsFatras {

/// Single particle simulation result (and intermediate state).
///
/// This result struct is used by multiple components and is thus defined
/// separately from its usage.
struct SimulationResult {
  /// Current/ final particle state.
  Particle particle;
  /// Additional particles generated by interactions or decay.
  std::vector<Particle> generatedParticles;
  /// Hits created by the particle.
  std::vector<Hit> hits;

  // The following variables are internal implementation details that must be
  // defined here for technical reasons.
  //
  // Values are initialized to NaN so the simulation actor can detect when it is
  // called for the first time, i.e. when the result struct is
  // default-initialized.

  /// Flag indicating whether the particle is still alive and simulation should
  /// continue
  bool isAlive = true;
  /// Proper time limit before particle decay occurs
  double properTimeLimit = std::numeric_limits<double>::quiet_NaN();
  /// Accumulated radiation length limit before next electromagnetic interaction
  double x0Limit = std::numeric_limits<double>::quiet_NaN();
  /// Accumulated nuclear interaction length limit before next hadronic
  /// interaction
  double l0Limit = std::numeric_limits<double>::quiet_NaN();
  /// Process index selection for the next electromagnetic interaction
  std::size_t x0Process = std::numeric_limits<std::size_t>::max();
  /// Process index selection for the next hadronic interaction
  std::size_t l0Process = std::numeric_limits<std::size_t>::max();
};

}  // namespace ActsFatras
