name: 'Dependencies'
description: 'Install dependencies from lockfile'

inputs:
  compiler:
    description: 'Compiler to use'
    required: false
    default: ''
  GITHUB_TOKEN:
    description: 'Secrets to pass to the action'
    required: false
    default: ''
  spack_version:
    description: 'Version of Spack to use'
    required: false
    default: 'v1.0.2'
  spack_repo_version:
    description: 'Version of Spack builtin repo to use'
    required: false
    default: 'v2025.07.0'
  DEPENDENCY_TAG:
    description: 'Dependency tag to pull from'
    required: false
    default: 'v17.0.0'
  full_install:
    description: 'Whether to do a full dependency installation including Geant4 datasets and Python packages'
    required: false
    default: 'false'


runs:
  using: 'composite'
  steps:
    - name: Setup Python version
      uses: actions/setup-python@v4
      with:
        python-version: "3.12"

    - name: Prerequisites
      if: startsWith(runner.os, 'macos')
      shell: bash
      run: |
        brew install ninja ccache

    # TODO caching is commented out for now with https://github.com/acts-project/acts/pull/4723
    # since it stopped working for macOS runners with the newest spack version due to symlink copying issues.

    # - name: Restore cache
    #   id: cache-restore
    #   uses: actions/cache/restore@v4
    #   with:
    #     path: spack_cache
    #     key: spack-r3-${{ inputs.spack_version }}-${{ inputs.spack_repo_version }}-${{ hashFiles('CI/dependencies/setup_spack.sh') }}

    # - name: Extract cached Spack
    #   if: steps.cache-restore.outputs.cache-hit == 'true'
    #   shell: bash
    #   run: |
    #     mv spack_cache/spack .
    #     mv spack_cache/.spack ~

    - name: Setup Spack from scratch
      # if: steps.cache-restore.outputs.cache-hit != 'true'
      shell: bash
      env:
        SPACK_VERSION: ${{ inputs.spack_version }}
      run: |
        CI/dependencies/setup_spack.sh ${PWD}/spack
        spack/bin/spack list > /dev/null
        rm -rf spack/.git
        # mkdir spack_cache
        # cp -r spack spack_cache/
        # cp -r ~/.spack spack_cache/

    # - name: Save cache
    #   if: steps.cache-restore.outputs.cache-hit != 'true'
    #   uses: actions/cache/save@v4
    #   with:
    #     path: |
    #       spack_cache
    #     key: ${{ steps.cache-restore.outputs.cache-primary-key }}

    - name: Install dependencies
      shell: bash
      env:
        GITHUB_TOKEN: ${{ inputs.GITHUB_TOKEN }}
        SPACK_REPO_VERSION: ${{ inputs.spack_repo_version }}
        DEPENDENCY_TAG: ${{ inputs.DEPENDENCY_TAG }}
      run: |
        args=""
        if [ "${{ inputs.full_install }}" == "true" ]; then
          echo "Full install"
          args="${args} -f"
        fi
        if [ -n "${{ inputs.compiler }}" ]; then
          echo "With compiler"
          args="${args} -c ${{ inputs.compiler }}"
        fi

        CI/dependencies/setup.sh $args
