diff --git a/core/include/traccc/seeding/spacepoint_binning_helper.hpp b/core/include/traccc/seeding/spacepoint_binning_helper.hpp
index 56a068d4..5a4f2ff2 100644
--- a/core/include/traccc/seeding/spacepoint_binning_helper.hpp
+++ b/core/include/traccc/seeding/spacepoint_binning_helper.hpp
@@ -99,7 +99,8 @@ inline std::pair<detray::axis2::circular<>, detray::axis2::regular<>> get_axes(
 
     scalar zBinSize = grid_config.cotThetaMax * grid_config.deltaRMax;
     detray::dindex zBins = std::max(
-        1, (int)std::floor((grid_config.zMax - grid_config.zMin) / zBinSize));
+        1, static_cast<int>(
+               std::floor((grid_config.zMax - grid_config.zMin) / zBinSize)));
 
     detray::axis2::regular m_z_axis{zBins, grid_config.zMin, grid_config.zMax,
                                     mr};
diff --git a/io/src/csv/read_cells.cpp b/io/src/csv/read_cells.cpp
index a80d8f92..1451202f 100644
--- a/io/src/csv/read_cells.cpp
+++ b/io/src/csv/read_cells.cpp
@@ -58,7 +58,7 @@ traccc::cell_module get_module(const std::uint64_t geometry_id,
         }
 
         // Set the value on the module description.
-        result.placement = (*geom)[result.surface_link.value()];
+        result.placement = geom->at(result.surface_link.value());
     }
 
     // Find/set the digitization configuration of the detector module.
diff --git a/io/src/csv/read_spacepoints.cpp b/io/src/csv/read_spacepoints.cpp
index b2a38aba..41922683 100644
--- a/io/src/csv/read_spacepoints.cpp
+++ b/io/src/csv/read_spacepoints.cpp
@@ -59,7 +59,7 @@ void read_spacepoints(spacepoint_reader_output& out, std::string_view filename,
             m[iohit.geometry_id] = link;
             cell_module mod;
             mod.surface_link = detray::geometry::barcode{iohit.geometry_id};
-            mod.placement = geom[iohit.geometry_id];
+            mod.placement = geom.at(iohit.geometry_id);
             result_modules.push_back(mod);
         }
 
